/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse200AdditionalDataPagination model module.
 * @module model/InlineResponse200AdditionalDataPagination
 * @version 1.0.0
 */
class InlineResponse200AdditionalDataPagination {
    /**
     * Constructs a new <code>InlineResponse200AdditionalDataPagination</code>.
     * Pagination details of the list
     * @alias module:model/InlineResponse200AdditionalDataPagination
     */
    constructor() { 
        
        InlineResponse200AdditionalDataPagination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse200AdditionalDataPagination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200AdditionalDataPagination} obj Optional instance to populate.
     * @return {module:model/InlineResponse200AdditionalDataPagination} The populated <code>InlineResponse200AdditionalDataPagination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200AdditionalDataPagination();

            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('more_items_in_collection')) {
                obj['more_items_in_collection'] = ApiClient.convertToType(data['more_items_in_collection'], 'Boolean');
            }
            if (data.hasOwnProperty('next_start')) {
                obj['next_start'] = ApiClient.convertToType(data['next_start'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Pagination start
 * @member {Number} start
 */
InlineResponse200AdditionalDataPagination.prototype['start'] = undefined;

/**
 * Items shown per page
 * @member {Number} limit
 */
InlineResponse200AdditionalDataPagination.prototype['limit'] = undefined;

/**
 * Whether there are more list items in the collection than displayed
 * @member {Boolean} more_items_in_collection
 */
InlineResponse200AdditionalDataPagination.prototype['more_items_in_collection'] = undefined;

/**
 * Next pagination start
 * @member {Number} next_start
 */
InlineResponse200AdditionalDataPagination.prototype['next_start'] = undefined;






export default InlineResponse200AdditionalDataPagination;

