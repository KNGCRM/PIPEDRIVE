/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Owner from './Owner';
import RelationshipOrganizationInfoItemWithActiveFlag from './RelationshipOrganizationInfoItemWithActiveFlag';

/**
 * The OrgAndOwnerId model module.
 * @module model/OrgAndOwnerId
 * @version 1.0.0
 */
class OrgAndOwnerId {
    /**
     * Constructs a new <code>OrgAndOwnerId</code>.
     * @alias module:model/OrgAndOwnerId
     */
    constructor() { 
        
        OrgAndOwnerId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgAndOwnerId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgAndOwnerId} obj Optional instance to populate.
     * @return {module:model/OrgAndOwnerId} The populated <code>OrgAndOwnerId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgAndOwnerId();

            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = Owner.constructFromObject(data['owner_id']);

                delete data['owner_id'];
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = RelationshipOrganizationInfoItemWithActiveFlag.constructFromObject(data['org_id']);

                delete data['org_id'];
            }

            if (Object.keys(data).length > 0) {
                obj['extra'] = data;
            }

        }
        return obj;
    }


}

/**
 * @member {module:model/Owner} owner_id
 */
OrgAndOwnerId.prototype['owner_id'] = undefined;

/**
 * @member {module:model/RelationshipOrganizationInfoItemWithActiveFlag} org_id
 */
OrgAndOwnerId.prototype['org_id'] = undefined;






export default OrgAndOwnerId;

