/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LeadSearchItemItemOrganization from './LeadSearchItemItemOrganization';
import LeadSearchItemItemOwner from './LeadSearchItemItemOwner';
import LeadSearchItemItemPerson from './LeadSearchItemItemPerson';

/**
 * The LeadSearchItemItem model module.
 * @module model/LeadSearchItemItem
 * @version 1.0.0
 */
class LeadSearchItemItem {
    /**
     * Constructs a new <code>LeadSearchItemItem</code>.
     * @alias module:model/LeadSearchItemItem
     */
    constructor() { 
        
        LeadSearchItemItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LeadSearchItemItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeadSearchItemItem} obj Optional instance to populate.
     * @return {module:model/LeadSearchItemItem} The populated <code>LeadSearchItemItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeadSearchItemItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');

                delete data['id'];
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');

                delete data['type'];
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');

                delete data['title'];
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = LeadSearchItemItemOwner.constructFromObject(data['owner']);

                delete data['owner'];
            }
            if (data.hasOwnProperty('person')) {
                obj['person'] = LeadSearchItemItemPerson.constructFromObject(data['person']);

                delete data['person'];
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = LeadSearchItemItemOrganization.constructFromObject(data['organization']);

                delete data['organization'];
            }
            if (data.hasOwnProperty('phones')) {
                obj['phones'] = ApiClient.convertToType(data['phones'], ['String']);

                delete data['phones'];
            }
            if (data.hasOwnProperty('emails')) {
                obj['emails'] = ApiClient.convertToType(data['emails'], ['String']);

                delete data['emails'];
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], 'Number');

                delete data['custom_fields'];
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], ['String']);

                delete data['notes'];
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');

                delete data['value'];
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');

                delete data['currency'];
            }
            if (data.hasOwnProperty('visible_to')) {
                obj['visible_to'] = ApiClient.convertToType(data['visible_to'], 'Number');

                delete data['visible_to'];
            }
            if (data.hasOwnProperty('is_archived')) {
                obj['is_archived'] = ApiClient.convertToType(data['is_archived'], 'Boolean');

                delete data['is_archived'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The ID of the lead
 * @member {String} id
 */
LeadSearchItemItem.prototype['id'] = undefined;

/**
 * The type of the item
 * @member {String} type
 */
LeadSearchItemItem.prototype['type'] = undefined;

/**
 * The title of the lead
 * @member {String} title
 */
LeadSearchItemItem.prototype['title'] = undefined;

/**
 * @member {module:model/LeadSearchItemItemOwner} owner
 */
LeadSearchItemItem.prototype['owner'] = undefined;

/**
 * @member {module:model/LeadSearchItemItemPerson} person
 */
LeadSearchItemItem.prototype['person'] = undefined;

/**
 * @member {module:model/LeadSearchItemItemOrganization} organization
 */
LeadSearchItemItem.prototype['organization'] = undefined;

/**
 * @member {Array.<String>} phones
 */
LeadSearchItemItem.prototype['phones'] = undefined;

/**
 * @member {Array.<String>} emails
 */
LeadSearchItemItem.prototype['emails'] = undefined;

/**
 * Custom fields
 * @member {Number} custom_fields
 */
LeadSearchItemItem.prototype['custom_fields'] = undefined;

/**
 * An array of notes
 * @member {Array.<String>} notes
 */
LeadSearchItemItem.prototype['notes'] = undefined;

/**
 * The value of the lead
 * @member {Number} value
 */
LeadSearchItemItem.prototype['value'] = undefined;

/**
 * The currency of the lead
 * @member {String} currency
 */
LeadSearchItemItem.prototype['currency'] = undefined;

/**
 * The visibility of the lead
 * @member {Number} visible_to
 */
LeadSearchItemItem.prototype['visible_to'] = undefined;

/**
 * A flag indicating whether the lead is archived or not
 * @member {Boolean} is_archived
 */
LeadSearchItemItem.prototype['is_archived'] = undefined;






export default LeadSearchItemItem;

