/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse20011DataTotals model module.
 * @module model/InlineResponse20011DataTotals
 * @version 1.0.0
 */
class InlineResponse20011DataTotals {
    /**
     * Constructs a new <code>InlineResponse20011DataTotals</code>.
     * The total values of Deals for the given period
     * @alias module:model/InlineResponse20011DataTotals
     */
    constructor() { 
        
        InlineResponse20011DataTotals.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20011DataTotals</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20011DataTotals} obj Optional instance to populate.
     * @return {module:model/InlineResponse20011DataTotals} The populated <code>InlineResponse20011DataTotals</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20011DataTotals();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], Object);
            }
            if (data.hasOwnProperty('weighted_values')) {
                obj['weighted_values'] = ApiClient.convertToType(data['weighted_values'], Object);
            }
            if (data.hasOwnProperty('open_count')) {
                obj['open_count'] = ApiClient.convertToType(data['open_count'], 'Number');
            }
            if (data.hasOwnProperty('open_values')) {
                obj['open_values'] = ApiClient.convertToType(data['open_values'], Object);
            }
            if (data.hasOwnProperty('weighted_open_values')) {
                obj['weighted_open_values'] = ApiClient.convertToType(data['weighted_open_values'], Object);
            }
            if (data.hasOwnProperty('won_count')) {
                obj['won_count'] = ApiClient.convertToType(data['won_count'], 'Number');
            }
            if (data.hasOwnProperty('won_values')) {
                obj['won_values'] = ApiClient.convertToType(data['won_values'], Object);
            }
        }
        return obj;
    }


}

/**
 * The number of Deals for the given period
 * @member {Number} count
 */
InlineResponse20011DataTotals.prototype['count'] = undefined;

/**
 * The total values of Deals grouped by Deal currency
 * @member {Object} values
 */
InlineResponse20011DataTotals.prototype['values'] = undefined;

/**
 * The total weighted values of Deals for the given period grouped by Deal currency. The weighted value of a Deal is calculated as probability times Deal value.
 * @member {Object} weighted_values
 */
InlineResponse20011DataTotals.prototype['weighted_values'] = undefined;

/**
 * The number of open Deals for the given period
 * @member {Number} open_count
 */
InlineResponse20011DataTotals.prototype['open_count'] = undefined;

/**
 * The total values of open Deals for the given period grouped by Deal currency
 * @member {Object} open_values
 */
InlineResponse20011DataTotals.prototype['open_values'] = undefined;

/**
 * The total weighted values of open Deals for the given period grouped by Deal currency. The weighted value of a Deal is calculated as probability times Deal value.
 * @member {Object} weighted_open_values
 */
InlineResponse20011DataTotals.prototype['weighted_open_values'] = undefined;

/**
 * The number of won Deals for the given period
 * @member {Number} won_count
 */
InlineResponse20011DataTotals.prototype['won_count'] = undefined;

/**
 * The total values of won Deals for the given period grouped by Deal currency
 * @member {Object} won_values
 */
InlineResponse20011DataTotals.prototype['won_values'] = undefined;






export default InlineResponse20011DataTotals;

