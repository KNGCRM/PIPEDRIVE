/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VisibleTo from './VisibleTo';

/**
 * The BasicDeal2 model module.
 * @module model/BasicDeal2
 * @version 1.0.0
 */
class BasicDeal2 {
    /**
     * Constructs a new <code>BasicDeal2</code>.
     * @alias module:model/BasicDeal2
     */
    constructor() { 
        
        BasicDeal2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicDeal2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicDeal2} obj Optional instance to populate.
     * @return {module:model/BasicDeal2} The populated <code>BasicDeal2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicDeal2();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');

                delete data['title'];
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');

                delete data['value'];
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');

                delete data['currency'];
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');

                delete data['user_id'];
            }
            if (data.hasOwnProperty('person_id')) {
                obj['person_id'] = ApiClient.convertToType(data['person_id'], 'Number');

                delete data['person_id'];
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'Number');

                delete data['org_id'];
            }
            if (data.hasOwnProperty('stage_id')) {
                obj['stage_id'] = ApiClient.convertToType(data['stage_id'], 'Number');

                delete data['stage_id'];
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');

                delete data['status'];
            }
            if (data.hasOwnProperty('expected_close_date')) {
                obj['expected_close_date'] = ApiClient.convertToType(data['expected_close_date'], 'Date');

                delete data['expected_close_date'];
            }
            if (data.hasOwnProperty('probability')) {
                obj['probability'] = ApiClient.convertToType(data['probability'], 'Number');

                delete data['probability'];
            }
            if (data.hasOwnProperty('lost_reason')) {
                obj['lost_reason'] = ApiClient.convertToType(data['lost_reason'], 'String');

                delete data['lost_reason'];
            }
            if (data.hasOwnProperty('visible_to')) {
                obj['visible_to'] = ApiClient.convertToType(data['visible_to'], VisibleTo);

                delete data['visible_to'];
            }

            if (Object.keys(data).length > 0) {
                obj['extra'] = data;
            }

        }
        return obj;
    }


}

/**
 * Deal title
 * @member {String} title
 */
BasicDeal2.prototype['title'] = undefined;

/**
 * Value of the deal. If omitted, value will be set to 0.
 * @member {String} value
 */
BasicDeal2.prototype['value'] = undefined;

/**
 * Currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.
 * @member {String} currency
 */
BasicDeal2.prototype['currency'] = undefined;

/**
 * ID of the user who will be marked as the owner of this deal. If omitted, the authorized user ID will be used.
 * @member {Number} user_id
 */
BasicDeal2.prototype['user_id'] = undefined;

/**
 * ID of the person this deal will be associated with
 * @member {Number} person_id
 */
BasicDeal2.prototype['person_id'] = undefined;

/**
 * ID of the organization this deal will be associated with
 * @member {Number} org_id
 */
BasicDeal2.prototype['org_id'] = undefined;

/**
 * ID of the stage this deal will be placed in a pipeline (note that you can't supply the ID of the pipeline as this will be assigned automatically based on stage_id). If omitted, the deal will be placed in the first stage of the default pipeline.
 * @member {Number} stage_id
 */
BasicDeal2.prototype['stage_id'] = undefined;

/**
 * open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.
 * @member {module:model/BasicDeal2.StatusEnum} status
 */
BasicDeal2.prototype['status'] = undefined;

/**
 * The expected close date of the Deal. In ISO 8601 format: YYYY-MM-DD.
 * @member {Date} expected_close_date
 */
BasicDeal2.prototype['expected_close_date'] = undefined;

/**
 * Deal success probability percentage. Used/shown only when deal_probability for the pipeline of the deal is enabled.
 * @member {Number} probability
 */
BasicDeal2.prototype['probability'] = undefined;

/**
 * Optional message about why the deal was lost (to be used when status=lost)
 * @member {String} lost_reason
 */
BasicDeal2.prototype['lost_reason'] = undefined;

/**
 * Visibility of the deal. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>
 * @member {module:model/VisibleTo} visible_to
 */
BasicDeal2.prototype['visible_to'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
BasicDeal2['StatusEnum'] = {

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "won"
     * @const
     */
    "won": "won",

    /**
     * value: "lost"
     * @const
     */
    "lost": "lost",

    /**
     * value: "lost"
     * @const
     */
    "lost": "lost",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted"
};



export default BasicDeal2;

