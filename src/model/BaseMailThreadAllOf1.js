/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseMailThreadAllOf1Parties from './BaseMailThreadAllOf1Parties';

/**
 * The BaseMailThreadAllOf1 model module.
 * @module model/BaseMailThreadAllOf1
 * @version 1.0.0
 */
class BaseMailThreadAllOf1 {
    /**
     * Constructs a new <code>BaseMailThreadAllOf1</code>.
     * @alias module:model/BaseMailThreadAllOf1
     */
    constructor() { 
        
        BaseMailThreadAllOf1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseMailThreadAllOf1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseMailThreadAllOf1} obj Optional instance to populate.
     * @return {module:model/BaseMailThreadAllOf1} The populated <code>BaseMailThreadAllOf1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseMailThreadAllOf1();

            if (data.hasOwnProperty('parties')) {
                obj['parties'] = BaseMailThreadAllOf1Parties.constructFromObject(data['parties']);
            }
            if (data.hasOwnProperty('drafts_parties')) {
                obj['drafts_parties'] = ApiClient.convertToType(data['drafts_parties'], [Object]);
            }
            if (data.hasOwnProperty('folders')) {
                obj['folders'] = ApiClient.convertToType(data['folders'], ['String']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('snippet_draft')) {
                obj['snippet_draft'] = ApiClient.convertToType(data['snippet_draft'], 'String');
            }
            if (data.hasOwnProperty('snippet_sent')) {
                obj['snippet_sent'] = ApiClient.convertToType(data['snippet_sent'], 'String');
            }
            if (data.hasOwnProperty('message_count')) {
                obj['message_count'] = ApiClient.convertToType(data['message_count'], 'Number');
            }
            if (data.hasOwnProperty('has_draft_flag')) {
                obj['has_draft_flag'] = ApiClient.convertToType(data['has_draft_flag'], Object);
            }
            if (data.hasOwnProperty('has_sent_flag')) {
                obj['has_sent_flag'] = ApiClient.convertToType(data['has_sent_flag'], Object);
            }
            if (data.hasOwnProperty('archived_flag')) {
                obj['archived_flag'] = ApiClient.convertToType(data['archived_flag'], 'Number');
            }
            if (data.hasOwnProperty('shared_flag')) {
                obj['shared_flag'] = ApiClient.convertToType(data['shared_flag'], Object);
            }
            if (data.hasOwnProperty('external_deleted_flag')) {
                obj['external_deleted_flag'] = ApiClient.convertToType(data['external_deleted_flag'], Object);
            }
            if (data.hasOwnProperty('first_message_to_me_flag')) {
                obj['first_message_to_me_flag'] = ApiClient.convertToType(data['first_message_to_me_flag'], Object);
            }
            if (data.hasOwnProperty('last_message_timestamp')) {
                obj['last_message_timestamp'] = ApiClient.convertToType(data['last_message_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('first_message_timestamp')) {
                obj['first_message_timestamp'] = ApiClient.convertToType(data['first_message_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('last_message_sent_timestamp')) {
                obj['last_message_sent_timestamp'] = ApiClient.convertToType(data['last_message_sent_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('last_message_received_timestamp')) {
                obj['last_message_received_timestamp'] = ApiClient.convertToType(data['last_message_received_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('add_time')) {
                obj['add_time'] = ApiClient.convertToType(data['add_time'], 'Date');
            }
            if (data.hasOwnProperty('update_time')) {
                obj['update_time'] = ApiClient.convertToType(data['update_time'], 'Date');
            }
            if (data.hasOwnProperty('deal_id')) {
                obj['deal_id'] = ApiClient.convertToType(data['deal_id'], 'Number');
            }
            if (data.hasOwnProperty('deal_status')) {
                obj['deal_status'] = ApiClient.convertToType(data['deal_status'], 'String');
            }
            if (data.hasOwnProperty('all_messages_sent_flag')) {
                obj['all_messages_sent_flag'] = ApiClient.convertToType(data['all_messages_sent_flag'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/BaseMailThreadAllOf1Parties} parties
 */
BaseMailThreadAllOf1.prototype['parties'] = undefined;

/**
 * Parties of the drafted mail thread
 * @member {Array.<Object>} drafts_parties
 */
BaseMailThreadAllOf1.prototype['drafts_parties'] = undefined;

/**
 * Folders in which messages from thread are being stored
 * @member {Array.<String>} folders
 */
BaseMailThreadAllOf1.prototype['folders'] = undefined;

/**
 * Version
 * @member {Number} version
 */
BaseMailThreadAllOf1.prototype['version'] = undefined;

/**
 * A snippet from a draft
 * @member {String} snippet_draft
 */
BaseMailThreadAllOf1.prototype['snippet_draft'] = undefined;

/**
 * A snippet from a message sent
 * @member {String} snippet_sent
 */
BaseMailThreadAllOf1.prototype['snippet_sent'] = undefined;

/**
 * An amount of messages
 * @member {Number} message_count
 */
BaseMailThreadAllOf1.prototype['message_count'] = undefined;

/**
 * Whether the mail thread has any drafts
 * @member {Object} has_draft_flag
 */
BaseMailThreadAllOf1.prototype['has_draft_flag'] = undefined;

/**
 * Whether the mail thread has messages sent
 * @member {Object} has_sent_flag
 */
BaseMailThreadAllOf1.prototype['has_sent_flag'] = undefined;

/**
 * @member {Number} archived_flag
 */
BaseMailThreadAllOf1.prototype['archived_flag'] = undefined;

/**
 * Whether the mail thread is shared
 * @member {Object} shared_flag
 */
BaseMailThreadAllOf1.prototype['shared_flag'] = undefined;

/**
 * Whether the mail thread has been deleted externally
 * @member {Object} external_deleted_flag
 */
BaseMailThreadAllOf1.prototype['external_deleted_flag'] = undefined;

/**
 * Whether the mail thread was initialized by others
 * @member {Object} first_message_to_me_flag
 */
BaseMailThreadAllOf1.prototype['first_message_to_me_flag'] = undefined;

/**
 * Last message timestamp
 * @member {Date} last_message_timestamp
 */
BaseMailThreadAllOf1.prototype['last_message_timestamp'] = undefined;

/**
 * The time when the mail thread has had the first message received or created
 * @member {Date} first_message_timestamp
 */
BaseMailThreadAllOf1.prototype['first_message_timestamp'] = undefined;

/**
 * The last time when the mail thread has had a message sent
 * @member {Date} last_message_sent_timestamp
 */
BaseMailThreadAllOf1.prototype['last_message_sent_timestamp'] = undefined;

/**
 * The last time when the mail thread has had a message received
 * @member {Date} last_message_received_timestamp
 */
BaseMailThreadAllOf1.prototype['last_message_received_timestamp'] = undefined;

/**
 * The time when the mail thread was inserted to database
 * @member {Date} add_time
 */
BaseMailThreadAllOf1.prototype['add_time'] = undefined;

/**
 * The time when the mail thread was updated in database received
 * @member {Date} update_time
 */
BaseMailThreadAllOf1.prototype['update_time'] = undefined;

/**
 * ID of the deal
 * @member {Number} deal_id
 */
BaseMailThreadAllOf1.prototype['deal_id'] = undefined;

/**
 * Status of the deal
 * @member {String} deal_status
 */
BaseMailThreadAllOf1.prototype['deal_status'] = undefined;

/**
 * Whether all the mail thread messages have been sent
 * @member {Object} all_messages_sent_flag
 */
BaseMailThreadAllOf1.prototype['all_messages_sent_flag'] = undefined;






export default BaseMailThreadAllOf1;

