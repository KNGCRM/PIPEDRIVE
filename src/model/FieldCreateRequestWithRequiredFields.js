/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FieldUpdateRequest from './FieldUpdateRequest';

/**
 * The FieldCreateRequestWithRequiredFields model module.
 * @module model/FieldCreateRequestWithRequiredFields
 * @version 1.0.0
 */
class FieldCreateRequestWithRequiredFields {
    /**
     * Constructs a new <code>FieldCreateRequestWithRequiredFields</code>.
     * @alias module:model/FieldCreateRequestWithRequiredFields
     * @implements module:model/FieldUpdateRequest
     */
    constructor() { 
        FieldUpdateRequest.initialize(this);
        FieldCreateRequestWithRequiredFields.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FieldCreateRequestWithRequiredFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FieldCreateRequestWithRequiredFields} obj Optional instance to populate.
     * @return {module:model/FieldCreateRequestWithRequiredFields} The populated <code>FieldCreateRequestWithRequiredFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FieldCreateRequestWithRequiredFields();
            FieldUpdateRequest.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');

                delete data['name'];
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], 'String');

                delete data['options'];
            }

            if (Object.keys(data).length > 0) {
                obj['extra'] = data;
            }

        }
        return obj;
    }


}

/**
 * Name of the field
 * @member {String} name
 */
FieldCreateRequestWithRequiredFields.prototype['name'] = undefined;

/**
 * When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]
 * @member {String} options
 */
FieldCreateRequestWithRequiredFields.prototype['options'] = undefined;


// Implement FieldUpdateRequest interface:
/**
 * Name of the field
 * @member {String} name
 */
FieldUpdateRequest.prototype['name'] = undefined;
/**
 * When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]
 * @member {String} options
 */
FieldUpdateRequest.prototype['options'] = undefined;




export default FieldCreateRequestWithRequiredFields;

