/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateARecurringSubscription model module.
 * @module model/UpdateARecurringSubscription
 * @version 1.0.0
 */
class UpdateARecurringSubscription {
    /**
     * Constructs a new <code>UpdateARecurringSubscription</code>.
     * @alias module:model/UpdateARecurringSubscription
     * @param effectiveDate {Date} All payments after that date will be affected. Format: YYYY-MM-DD
     */
    constructor(effectiveDate) { 
        
        UpdateARecurringSubscription.initialize(this, effectiveDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, effectiveDate) { 
        obj['effective_date'] = effectiveDate;
    }

    /**
     * Constructs a <code>UpdateARecurringSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateARecurringSubscription} obj Optional instance to populate.
     * @return {module:model/UpdateARecurringSubscription} The populated <code>UpdateARecurringSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateARecurringSubscription();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('cycle_amount')) {
                obj['cycle_amount'] = ApiClient.convertToType(data['cycle_amount'], 'Number');
            }
            if (data.hasOwnProperty('payments')) {
                obj['payments'] = ApiClient.convertToType(data['payments'], [Object]);
            }
            if (data.hasOwnProperty('update_deal_value')) {
                obj['update_deal_value'] = ApiClient.convertToType(data['update_deal_value'], 'Boolean');
            }
            if (data.hasOwnProperty('effective_date')) {
                obj['effective_date'] = ApiClient.convertToType(data['effective_date'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * Description of the Recurring Subscription
 * @member {String} description
 */
UpdateARecurringSubscription.prototype['description'] = undefined;

/**
 * Amount of each payment
 * @member {Number} cycle_amount
 */
UpdateARecurringSubscription.prototype['cycle_amount'] = undefined;

/**
 * Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
 * @member {Array.<Object>} payments
 */
UpdateARecurringSubscription.prototype['payments'] = undefined;

/**
 * Indicates that the Deal value must be set to Recurring Subscription's MRR value
 * @member {Boolean} update_deal_value
 */
UpdateARecurringSubscription.prototype['update_deal_value'] = undefined;

/**
 * All payments after that date will be affected. Format: YYYY-MM-DD
 * @member {Date} effective_date
 */
UpdateARecurringSubscription.prototype['effective_date'] = undefined;






export default UpdateARecurringSubscription;

