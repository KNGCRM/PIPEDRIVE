/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddALeadLabel model module.
 * @module model/AddALeadLabel
 * @version 1.0.0
 */
class AddALeadLabel {
    /**
     * Constructs a new <code>AddALeadLabel</code>.
     * @alias module:model/AddALeadLabel
     * @param name {String} The name of the Lead Label
     * @param color {module:model/AddALeadLabel.ColorEnum} The color of the label. Only a subset of colors can be used.
     */
    constructor(name, color) { 
        
        AddALeadLabel.initialize(this, name, color);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, color) { 
        obj['name'] = name;
        obj['color'] = color;
    }

    /**
     * Constructs a <code>AddALeadLabel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddALeadLabel} obj Optional instance to populate.
     * @return {module:model/AddALeadLabel} The populated <code>AddALeadLabel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddALeadLabel();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The name of the Lead Label
 * @member {String} name
 */
AddALeadLabel.prototype['name'] = undefined;

/**
 * The color of the label. Only a subset of colors can be used.
 * @member {module:model/AddALeadLabel.ColorEnum} color
 */
AddALeadLabel.prototype['color'] = undefined;





/**
 * Allowed values for the <code>color</code> property.
 * @enum {String}
 * @readonly
 */
AddALeadLabel['ColorEnum'] = {

    /**
     * value: "green"
     * @const
     */
    "green": "green",

    /**
     * value: "blue"
     * @const
     */
    "blue": "blue",

    /**
     * value: "red"
     * @const
     */
    "red": "red",

    /**
     * value: "yellow"
     * @const
     */
    "yellow": "yellow",

    /**
     * value: "purple"
     * @const
     */
    "purple": "purple",

    /**
     * value: "gray"
     * @const
     */
    "gray": "gray"
};



export default AddALeadLabel;

