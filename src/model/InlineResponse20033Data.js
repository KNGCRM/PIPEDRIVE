/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse20033Data model module.
 * @module model/InlineResponse20033Data
 * @version 1.0.0
 */
class InlineResponse20033Data {
    /**
     * Constructs a new <code>InlineResponse20033Data</code>.
     * @alias module:model/InlineResponse20033Data
     */
    constructor() { 
        
        InlineResponse20033Data.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20033Data</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20033Data} obj Optional instance to populate.
     * @return {module:model/InlineResponse20033Data} The populated <code>InlineResponse20033Data</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20033Data();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('add_time')) {
                obj['add_time'] = ApiClient.convertToType(data['add_time'], 'Date');
            }
            if (data.hasOwnProperty('update_time')) {
                obj['update_time'] = ApiClient.convertToType(data['update_time'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The unique ID of the Lead Label
 * @member {String} id
 */
InlineResponse20033Data.prototype['id'] = undefined;

/**
 * The name of the Lead Label
 * @member {String} name
 */
InlineResponse20033Data.prototype['name'] = undefined;

/**
 * The color of the label. Only a subset of colors can be used.
 * @member {module:model/InlineResponse20033Data.ColorEnum} color
 */
InlineResponse20033Data.prototype['color'] = undefined;

/**
 * The date and time of when the Lead Label was created. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
 * @member {Date} add_time
 */
InlineResponse20033Data.prototype['add_time'] = undefined;

/**
 * The date and time of when the Lead Label was last updated. In ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.
 * @member {Date} update_time
 */
InlineResponse20033Data.prototype['update_time'] = undefined;





/**
 * Allowed values for the <code>color</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse20033Data['ColorEnum'] = {

    /**
     * value: "green"
     * @const
     */
    "green": "green",

    /**
     * value: "blue"
     * @const
     */
    "blue": "blue",

    /**
     * value: "red"
     * @const
     */
    "red": "red",

    /**
     * value: "yellow"
     * @const
     */
    "yellow": "yellow",

    /**
     * value: "purple"
     * @const
     */
    "purple": "purple",

    /**
     * value: "gray"
     * @const
     */
    "gray": "gray"
};



export default InlineResponse20033Data;

