/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BaseUserAccess model module.
 * @module model/BaseUserAccess
 * @version 1.0.0
 */
class BaseUserAccess {
    /**
     * Constructs a new <code>BaseUserAccess</code>.
     * @alias module:model/BaseUserAccess
     */
    constructor() { 
        
        BaseUserAccess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BaseUserAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseUserAccess} obj Optional instance to populate.
     * @return {module:model/BaseUserAccess} The populated <code>BaseUserAccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BaseUserAccess();

            if (data.hasOwnProperty('app')) {
                obj['app'] = ApiClient.convertToType(data['app'], 'String');

                delete data['app'];
            }
            if (data.hasOwnProperty('admin')) {
                obj['admin'] = ApiClient.convertToType(data['admin'], 'Boolean');

                delete data['admin'];
            }
            if (data.hasOwnProperty('permission_set_id')) {
                obj['permission_set_id'] = ApiClient.convertToType(data['permission_set_id'], 'String');

                delete data['permission_set_id'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * @member {module:model/BaseUserAccess.AppEnum} app
 */
BaseUserAccess.prototype['app'] = undefined;

/**
 * @member {Boolean} admin
 */
BaseUserAccess.prototype['admin'] = undefined;

/**
 * @member {String} permission_set_id
 */
BaseUserAccess.prototype['permission_set_id'] = undefined;





/**
 * Allowed values for the <code>app</code> property.
 * @enum {String}
 * @readonly
 */
BaseUserAccess['AppEnum'] = {

    /**
     * value: "sales"
     * @const
     */
    "sales": "sales",

    /**
     * value: "projects"
     * @const
     */
    "projects": "projects",

    /**
     * value: "campaigns"
     * @const
     */
    "campaigns": "campaigns",

    /**
     * value: "global"
     * @const
     */
    "global": "global",

    /**
     * value: "account_settings"
     * @const
     */
    "account_settings": "account_settings"
};



export default BaseUserAccess;

